name: CI

on:
  push:
    branches:
      - main

env:
  COVERAGE_REPORT_DIR: build/coverage-report

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: andrelcmoreira/pool-day:v0
      volumes:
        - ${{ github.workspace }}:/pool-day
      credentials:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}
    steps:
      - uses: actions/checkout@v2
      - name: Build library
        run: |
          cmake -S . -B build
          cmake --build build

  unit_tests:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: andrelcmoreira/pool-day:v0
      volumes:
        - ${{ github.workspace }}:/pool-day
      credentials:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}
    steps:
      - uses: actions/checkout@v2

      - name: Build tests
        run: |
          cmake -DBUILD_UNIT_TESTS=ON -S . -B build
          cmake --build build

      - name: Run unit tests
        run: build/test/pool-day-tests

  dynamic_analysis:
    runs-on: ubuntu-latest
    needs: unit_tests
    container:
      image: andrelcmoreira/pool-day:v0
      volumes:
        - ${{ github.workspace }}:/pool-day
      credentials:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}
    steps:
      - uses: actions/checkout@v2

      - name: Build tests
        run: |
          cmake -DBUILD_UNIT_TESTS=ON -S . -B build
          cmake --build build

      - name: Run dynamic analysis
        run: valgrind --leak-check=full --error-exitcode=1 build/test/pool-day-tests

  check_documentation:
    runs-on: ubuntu-latest
    container:
      image: andrelcmoreira/pool-day:v0
      volumes:
        - ${{ github.workspace }}:/pool-day
      credentials:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}
    steps:
      - uses: actions/checkout@v2
      - name: Build library documentation
        run: |
          cmake -DBUILD_DOCUMENTATION=ON -S . -B build
          cmake --build build

  check_coverage:
    runs-on: ubuntu-latest
    needs: unit_tests
    container:
      image: andrelcmoreira/pool-day:v0
      volumes:
        - ${{ github.workspace }}:/pool-day
      credentials:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}
    steps:
      - uses: actions/checkout@v2

      - name: Build tests
        run: |
          cmake -DBUILD_UNIT_TESTS=ON -DBUILD_COVERAGE=ON -S . -B build
          cmake --build build

      - name: Generate coverage report
        env:
          LCOV_OUTPUT_FILE: /tmp/lcov_out
          LCOV_OUTPUT_DIR: build/CMakeFiles/pool-day.dir/src/
        run: |
          build/test/pool-day-tests
          lcov -c -d ${{ env.LCOV_OUTPUT_DIR }} -o ${{ env.LCOV_OUTPUT_FILE }}
          genhtml -o ${{ env.COVERAGE_REPORT_DIR }} ${{ env.LCOV_OUTPUT_FILE }}

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ${{ env.COVERAGE_REPORT_DIR }}
